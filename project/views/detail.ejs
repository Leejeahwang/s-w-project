<!DOCTYPE html>
<html lang="ko">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="stylesheet" href="/style/detail_style.css">
  <title>노트 상세</title>
</head>
<body>
  <div class="container">
    <div class="left-panel">
      <article>
        <h2><%= note.title %></h2>
        <p>과목명: <%= note.subject %></p>
        <p>교수명: <%= note.professor %></p>
        <p>카테고리: <%= note.category %></p>
        <canvas id="pdf-canvas" width="400"></canvas>
        <div><%= note.summary %></div>
        <small>
          작성자: <%= note.authorName %> /
          작성시간: <%= note.created_at.getFullYear() %>/<%= (note.created_at.getMonth()+1).toString().padStart(2,'0') %>/<%= note.created_at.getDate().toString().padStart(2,'0') %> <%= note.created_at.toLocaleTimeString('ko-KR') %>
        </small>
      </article>

      <% if (user && note.user_id === user.user_id) { %>
        <div>
          <a href="/notes/<%= note.id %>/edit">수정</a>
          <form method="POST" action="/notes/<%= note.id %>/delete" style="display:inline;">
            <input type="hidden" name="_method" value="DELETE">
            <button type="submit" onclick="return confirm('정말 삭제하시겠습니까?');">삭제</button>
          </form>
        </div>
      <% } %>
  
  <section class="comments">
      <h3>댓글 (<%= comments ? comments.length : 0 %>)</h3>

      <% if (comments && comments.length > 0) { %>
        <ul class="comments-list">
          <% comments.forEach(c => { %>
            <li class="comment-item">
              <% if (editCommentId === c.id) { %>
                <!-- 인라인 댓글 수정 폼 -->
                 <!-- ★ EDITED at 2025-05-23 -->
                  <form action="/notes/<%= note.id %>/comments/<%= c.id %>" method="POST">
                    <!-- method-override를 body에서 읽도록 hidden 필드 추가 -->
                    <input type="hidden" name="_method" value="PUT">
                    <textarea name="content" rows="3" required><%= c.content %></textarea>
                    <button type="submit">저장</button>
                    <a href="/notes/<%= note.id %>">취소</a>
                  </form>
              <% } else { %>
                <!-- 일반 댓글 표시 -->
                <p><strong><%= c.author %>:</strong> <%= c.content %></p>
                <small>
                  <em><%= new Date(c.created_at).toLocaleString('ko-KR') %></em>
                </small>

                <% /* 수정/삭제 버튼: 로그인 & 작성자 본인만 */ %>
                <% if (user && user.user_id === c.user_id) { %>
                  <span class="comment-actions">
                    <a
                      href="/notes/<%= note.id %>?editCommentId=<%= c.id %>"
                    >수정</a>
                     <form action="/notes/<%= note.id %>/comments/<%= c.id %>" method="POST" style="display:inline">
                        <!-- 여기에도 hidden 필드로 DELETE 지정 -->
                        <input type="hidden" name="_method" value="DELETE">
                        <button onclick="return confirm('댓글을 정말 삭제하시겠습니까?')">삭제</button>
                     </form>
                  </span>
                <% } %>
              <% } %>
            </li>
          <% }) %>
        </ul>
      <% } else { %>
        <p>아직 댓글이 없습니다.</p>
      <% } %>

      <% /* 새 댓글 작성 폼 */ %>
      <% if (user) { %>
        <form action="/notes/<%= note.id %>/comments" method="POST" class="new-comment-form">
          <h4>새 댓글 작성</h4>
          <textarea
            name="content"
            rows="3"
            placeholder="댓글을 입력하세요"
            required
          ></textarea>
          <button type="submit">등록</button>
        </form>
      <% } else { %>
        <p>
          댓글을 작성하려면
          <a href="/auth/login">로그인</a>이 필요합니다.
        </p>
      <% } %>
    </section>

      <a href="/">목록으로 돌아가기</a>
    </div>

    <div class="right-panel">
      <!-- 다운로드 박스 -->
      <div class="download-box">
        <h3>다운로드</h3>
          <a id="downloadLink" href="#" class="download-btn" data-note-id="<%= note.id %>" data-filename = "<%= file.stored_name %>">
            PDF 다운로드
          </a>
        <div id="fileInfo" class="file-info">
          파일명: <%= file.file_name %> <br>
          용량: <%= file.file_size %></span> <br>
          업로드: 
          <%= note.created_at.getFullYear() %>/
          <%= (note.created_at.getMonth() + 1).toString().padStart(2, '0') %>/
          <%= note.created_at.getDate().toString().padStart(2, '0') %>
        </div>
      </div>

      <!-- 좋아요 & 다운로드 수 -->
      <div class="like-download-stats">
      <!-- <% console.log(note); %> -->
        <button id="likeBtn" data-note-id="<%= note.id %>" style="margin-bottom: 10px;">
          👍 좋아요 (<span id="likeCount" style="color: aliceblue;"><%= note.like_count %></span>)
        </button>
        <p>📥 다운로드 수: <span id="downloadCount"><%= note.download_count || 0 %></span></p>
      </div>
    </div>
  </div>

  <!-- PDF 사진 로드 관련 -->
  <script>
    window.pdfUrl = "<%= file.file_path %>";
  </script>
  <script type = "module" src ="/js/pdf_viewer.js"></script>

  <script>
    // 좋아요 카운팅
    document.getElementById("likeBtn").addEventListener("click", async function () {
      const noteId = this.dataset.noteId;

      try {
        const res = await fetch(`/notes/${noteId}/like`, { method: 'POST' });
        const result = await res.json();

        if(res.status === 401) {
          alert(result.message);
          return;
        }

        if (res.status === 200) { // 좋아요 처리 완료
          const countSpan = document.getElementById("likeCount");
          countSpan.textContent = parseInt(countSpan.textContent) + 1;
          alert(result.message);
        }

        else {
          alert(result.message);
        }

      } catch (e) {
        console.error("좋아요 에러:", e);
        alert("좋아요 처리 중 오류가 발생했습니다.");
      }
    });
  </script>

  <script>
    // 다운로드 카운팅 & 파일 다운로드
    document.addEventListener("DOMContentLoaded", () => {
      document.getElementById("downloadLink").addEventListener("click", async function(e) {
        e.preventDefault();

        const noteId = this.dataset.noteId;
        const stored_name = this.dataset.filename;

        try {
          const updateDownload_log_res = await fetch(`/files/download-log/${noteId}`, { method: 'POST' });
          const updateDownload_log_result = await updateDownload_log_res.json();

          if(updateDownload_log_res.status === 401 || updateDownload_log_res.status === 404 || !updateDownload_log_res.ok) {
            alert(updateDownload_log_result.message);
            return;
          }

          alert(updateDownload_log_result.message);

          const link = document.createElement('a');
          link.href = `/files/download/${stored_name}`; // downloadController => /files/download/:stored_name으로 GET 요청
          link.download = '';
          document.body.appendChild(link);
          link.click();
          document.body.removeChild(link);
        
          // 다운로드 카운팅 +1 올리기
          const countSpan = document.getElementById("downloadCount");
          const currentCount = parseInt(countSpan.textContent) || 0;
          countSpan.textContent = currentCount + 1;
        
        } catch(e) {
          console.log(e);
          alert("다운로드 처리 중 오류");
        }
      });
    });
  </script>
</body>

<% if(typeof(alertMessage) != 'undefined') { %>
  <script>
    alert("<%= alertMessage.replace(/\n/g, '\\n') %>");
  </script>
<% } %>

</html>