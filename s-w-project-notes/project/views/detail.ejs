<!DOCTYPE html>
<html lang="ko">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="stylesheet" href="/style/detail_style.css">
  <title>노트 상세</title>
</head>
<body>
  <div class="container">
    <div class="left-panel">
      <article>
        <h2><%= note.title %></h2>
        <p>과목명: <%= note.subject %></p>
        <p>교수명: <%= note.professor %></p>
        <p>카테고리: <%= note.category %></p>
        <canvas id="pdf-canvas" width="400"></canvas>
        <div><%= note.summary %></div>
        <small>
          작성자: <%= note.authorName %> /
          작성시간: <%= note.created_at.getFullYear() %>/<%= (note.created_at.getMonth()+1).toString().padStart(2,'0') %>/<%= note.created_at.getDate().toString().padStart(2,'0') %> <%= note.created_at.toLocaleTimeString('ko-KR') %>
        </small>
      </article>

      <% if (user && note.user_id === user.user_id) { %>
        <div>
          <a href="/notes/<%= note.id %>/edit">수정</a>
          <form method="POST" action="/notes/<%= note.id %>/delete" style="display:inline;">
            <button type="submit" onclick="return confirm('정말 삭제하시겠습니까?');">삭제</button>
          </form>
        </div>
      <% } %>
  
      <section class="comments">
        <h3>댓글</h3>
        <% if (comments.length) { %>
          <ul>
            <% comments.forEach(c => { %>
              <li><strong><%= c.author %>:</strong> <%= c.content %> <em>(<%= c.created_at.toLocaleString() %>)</em></li>
            <% }) %>
          </ul>
        <% } else { %>
          <p>댓글이 없습니다.</p>
        <% } %>

        <% if (user) { %>
          <form method="POST" action="/notes/<%= note.id %>/comments">
            <textarea name="content" placeholder="댓글 입력" required></textarea>
            <button type="submit">댓글 작성</button>
          </form>
        <% } else { %>
          <p>댓글을 작성하려면 <a href="/login">로그인</a>이 필요합니다.</p>
        <% } %>
      </section>
      <a href="/notes">목록으로 돌아가기</a>
    </div>

    <div class="right-panel">
      <!-- 다운로드 박스 -->
      <div class="download-box">
        <h3>다운로드</h3>
        <!-- /files/<%= file.file_name %> -->
        <a id="downloadLink" href="#" download class="download-btn" data-note-id="<%= note.id %>">
          PDF 다운로드
        </a>
        <div id="fileInfo" class="file-info">
          파일명: <%= file.file_name %> <br>
          용량: <%= file.file_size %></span> <br>
          업로드: 
          <%= note.created_at.getFullYear() %>/
          <%= (note.created_at.getMonth() + 1).toString().padStart(2, '0') %>/
          <%= note.created_at.getDate().toString().padStart(2, '0') %>
        </div>
      </div>

      <!-- 좋아요 & 다운로드 수 -->
      <div class="like-download-stats">
      <!-- <% console.log(note); %> -->
        <button id="likeBtn" data-note-id="<%= note.id %>" style="margin-bottom: 10px;">
          👍 좋아요 (<span id="likeCount" style="color: aliceblue;"><%= note.like_count %></span>)
        </button>
        <p>📥 다운로드 수: <span id="downloadCount"><%= note.download_count || 0 %></span></p>
      </div>
    </div>
  </div>

  <!-- PDF 사진 로드 관련 -->
  <script>
    window.pdfUrl = "<%= file.file_path %>";
  </script>
  <script type = "module" src ="/js/pdf_viewer.js"></script>

  <script>
    // PDF 다운로드 버튼

    // 좋아요 수 관련
    document.getElementById("likeBtn").addEventListener("click", async function () {
      const noteId = this.dataset.noteId;
      try {
        const res = await fetch(`/notes/${noteId}/like`, { method: 'POST' });
        if (res.status === 401) {
          alert("로그인이 필요합니다.");
        }
        if(res.status === 400) {
          alert("이미 좋아요를 눌렀습니다");
        }
        if (res.ok) {
          const countSpan = document.getElementById("likeCount");
          const currentCount = parseInt(countSpan.textContent) || 0;
          countSpan.textContent = currentCount + 1;
        } else {
          const err = await res.json();
          alert(err.message || "좋아요 처리 실패");
        }
      } catch (e) {
        console.error("좋아요 에러:", e);
      }
    });

    // 파일 다운로드 관련
    document.getElementById("downloadLink").addEventListener("click", async function (e) {
      e.preventDefault();

      const noteId = this.dataset.noteId;
      const stored_name = "<%= file.stored_name %>";

      try {
        // 다운로드 기록 + 카운트 증가 처리용 POST 요청 (POST /files/download-log/:noteId)
        const res = await fetch(`/files/download-log/${noteId}`, { method: 'POST' });

        if(res.status === 401) {
          alert("로그인이 필요합니다. (detail.ejs 1)");
          return;
        }

        if(res.status === 404) {
          alert("파일이 존재하지 않습니다 (detail.ejs 2)");
          return;
        }

        if(res.ok) {
          const countSpan = document.getElementById("downloadCount");
          const currentCount = parseInt(countSpan.textContent) || 0;
          countSpan.textContent = currentCount + 1;
          
          // 실제 파일 다운로드 (GET /files/:stored_name)
          // window.location.href = `/files/${stored_name}`;
          const a = document.createElement('a');
          a.href = `/files/${stored_name}`;
          a.download = '';
          document.body.appendChild(a);
          a.click();
          document.body.removeChild(a);
        }

        else {
          alert("다운로드 처리 실패 (detail.ejs 3)");
        }
      }
      catch(err) {
        console.error("다운로드 에러:", err);
      }
    });
  </script>
</body>
</html>